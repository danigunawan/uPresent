apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: attendance
  namespace: production
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
  progressDeadlineSeconds: 10
  template:
    metadata:
      labels:
        app: attendance
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - ip-192-168-33-3.us-east-2.compute.internal
      containers:
        - image: rajagupt/attendance:latest
          name: attendance
          imagePullPolicy: Always
          ports:
            - name: attendance
              containerPort: 5000
          env:
            - name: SAGA_ENABLED
              value: "0"
            - name: REPORT_PUBLISH_API
              value: "http://reporting:8080/reporting"
            - name: FACENET_RECOGNITION_API
              value: "http://facenet:5000/api/face/"
            - name: MODULE_API_FETCH_DETAILS
              value: "http://management:8080/manage/module?moduleCode="
            - name: MANAGEMENT_API_GEO_FENCE
              value: "http://management:8080/manage/school/geo-fence?universityName="
            - name: MANAGEMENT_API_SCHOOL
              value: "http://management:8080/manage/school?schoolCode="
            - name: USER_API_FETCH_USER
              value: "http://user:8080/user?username="
            - name: AZURE_FACE_ENABLED
              value: "0"
            - name: AWS_REKOG_ENABLED
              value: "1"
          volumeMounts:
            - mountPath: /app/resources/images
              name: user-data-vol
      volumes:
        - name: user-data-vol
          persistentVolumeClaim:
            claimName: user-data-vol-claim
            readOnly: false
